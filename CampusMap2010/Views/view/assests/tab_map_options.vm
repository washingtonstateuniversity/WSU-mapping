<h3>Map Options</h3>
<div id="option_area">
	<fieldset>
		<label for="show_global_nav"><strong>Show tab nav:</strong></label>&nbsp;
			<select name="view.show_global_nav" id="show_global_nav">
				<option value="true" #if($view.show_global_nav && $view.show_global_nav=="true")selected="selected"#end >Yes</option>
				<option value="false" #if(!$view.show_global_nav || $view.show_global_nav=="false")selected="selected"#end >No</option>
			</select>
			#set($mess="If true (yes), this will show a list of the point on the map to the left of the map.  It will start as a tab and on user click it will open.  Default is no.")
			#parse("admin/noted.vm")
	</fieldset>
	
	
	
	
	
	
	#* this is the google model fleshed out as a virtual model *#
	
	#* NOTE: how this works is that with the TryGetValue we can introduce new items
			to the virtual model, as the VM is a json format set stroed in the DB
			and pushed out to a list<Dic<str,dno>> so the test is via the TryGetValue
	*#
	
	#if($options.TryGetValue("mapTypeId",$value))	#set($mapTypeId=$!options.mapTypeId)#end	
	<fieldset>
		<label for="mapTypeId"><strong>Map Type Control Options:</strong></label>&nbsp;
			<select name="options.mapTypeId" >
				<option class="author" value="ROADMAP" #if($!{mapTypeId} || ${mapTypeId}=="ROADMAP") selected="selected" #end>ROADMAP</option>
				<option class="author" value="SATELLITE" #if(${mapTypeId}=="SATELLITE") selected="selected" #end>SATELLITE</option>
				<option class="author" value="HYBRID" #if(${mapTypeId}=="HYBRID") selected="selected" #end>HYBRID</option>
				<option class="author" value="TERRAIN" #if(${mapTypeId}=="TERRAIN") selected="selected" #end>TERRAIN</option>
			</select>
			#set($mess="The initial Map type. Required and defaults to ROADMAP.")
			#parse("admin/noted.vm") 
	</fieldset>
	
	#if($options.TryGetValue("zoom",$value))#set($zoom=$!options.zoom)#end	
	<fieldset>
		<label for="zoom"><strong>Zoom:</strong></label>&nbsp;
			<input type="text" name="options.zoom" id="zoom" value="$!zoom" class="text ui-widget-content ui-corner-all" />
			#set($mess="The initial Map zoom level.")
			#parse("admin/noted.vm")
	</fieldset>	
	
	#if($options.TryGetValue("maxZoom",$value))#set($mapTypeId=$!options.maxZoom)#end		
	<fieldset>
		<label for="maxZoom"><strong>Map maximum Zoom:</strong></label>&nbsp;
			<input type="text" name="options.maxZoom" id="maxZoom" value="$!maxZoom" class="text ui-widget-content ui-corner-all" />
			#set($mess="The maximum zoom level which will be displayed on the map. If omitted, or set to null, the maximum zoom from the current map type is used instead.")
			#parse("admin/noted.vm") 
		 
	</fieldset>
	
	#if($options.TryGetValue("minZoom",$value))	#set($minZoom=$!options.minZoom)#end		
	<fieldset>
		<label for="minZoom"><strong>Map minimum Zoom:</strong></label>&nbsp;
			<input type="text" name="options.minZoom" id="maxZoom" value="$!minZoom" class="text ui-widget-content ui-corner-all" />
			#set($mess="The minimum zoom level which will be displayed on the map. If omitted, or set to null, the minimum zoom from the current map type is used instead.")
			#parse("admin/noted.vm") 
		 
	</fieldset>
	
	#if($options.TryGetValue("backgroundColor",$value))#set($backgroundColor=$!options.backgroundColor)#end
		<fieldset>
			<label for="backgroundColor"><strong>Background Color:</strong></label>&nbsp;
				<input type="text" name="options.backgroundColor" id="backgroundColor" value="$!backgroundColor" class="text ui-widget-content ui-corner-all" />
				#set($mess="Color used for the background of the Map div. This color will be visible when tiles have not yet loaded as the user pans. This option can only be set when the map is initialized.")
				#parse("admin/noted.vm") 
			 
		</fieldset>
	
	#if($options.TryGetValue("disableDefaultUI",$value))#set($disableDefaultUI=$!options.disableDefaultUI)#end
	<fieldset>
		<label for="disableDefaultUI"><strong>Disable Default UI:</strong></label>&nbsp;
			<select name="options.disableDefaultUI" id="disableDefaultUI">
				<option value="true" #if($!disableDefaultUI=="true")selected="selected"#end >Yes</option>
				<option value="false" #if($!disableDefaultUI=="false")selected="selected"#end >No</option>
			</select>
				#set($mess="If true (checked), disables all default UI. May be overridden individually but is enabled by default")
				#parse("admin/noted.vm") 			
		 
	</fieldset>
	
	#if($options.TryGetValue("draggable",$value))#set($draggable=$!options.draggable)#end
	<fieldset>
		<label for="draggable"><strong>Draggable state:</strong></label>&nbsp;
			<select name="options.draggable" id="draggable">
				<option value="true" #if($!draggable=="true")selected="selected"#end >Yes</option>
				<option value="false" #if($!draggable=="false")selected="selected"#end >No</option>
			</select>
			#set($mess="If false (checked), prevents the map from being dragged. Dragging is enabled by default.")
			#parse("admin/noted.vm")	
		
	</fieldset>
	
	#if($options.TryGetValue("draggableCursor",$value))	#set($draggableCursor=$!options.draggableCursor)#end
	<fieldset>
		<label for="draggableCursor"><strong>Draggable Cursor:</strong></label>&nbsp;
			<input type="text" name="options.draggableCursor" id="draggableCursor" value="$!draggableCursor" class="text ui-widget-content ui-corner-all" />
			#set($mess="The name or url of the cursor to display on a draggable object.")
			#parse("admin/noted.vm")	
		 
	</fieldset>
	
	#if($options.TryGetValue("heading",$value))	#set($heading=$!options.heading)#end	
	<fieldset>
		<label for="heading"><strong>Heading:</strong></label>&nbsp;
			<input type="text" name="options.heading" id="heading" value="$!heading" class="text ui-widget-content ui-corner-all" />
			#set($mess="The heading for aerial imagery in degrees measured clockwise from cardinal direction North. Headings are snapped to the nearest available angle for which imagery is available.")
			#parse("admin/noted.vm")	
		
	</fieldset>
	
	#if($options.TryGetValue("keyboardShortcuts",$value))	#set($keyboardShortcuts=$!options.keyboardShortcuts)#end	
	<fieldset>
		<label for="keyboardShortcuts"><strong>Disable Keyboard Shortcuts:</strong></label>&nbsp;
			<select name="options.keyboardShortcuts" id="keyboardShortcuts">
				<option value="true" #if($!keyboardShortcuts=="true")selected="selected"#end >Yes</option>
				<option value="false" #if($!keyboardShortcuts=="false")selected="selected"#end >No</option>
			</select>	
		#set($mess="If false (checked), prevents the map from being controlled by the keyboard. Keyboard shortcuts are enabled by default.")
			#parse("admin/noted.vm")	
		
	</fieldset>
	
	#if($options.TryGetValue("mapMaker",$value))	#set($mapMaker=$!options.mapMaker)#end	
	<fieldset>
		<label for="mapMaker"><strong>Use Map Maker Tiles:</strong></label>&nbsp;			
			<select name="options.mapMaker" id="mapMaker">
				<option value="true" #if($!mapMaker=="true")selected="selected"#end >Yes</option>
				<option value="false" #if($!mapMaker=="false")selected="selected"#end >No</option>
			</select>
			#set($mess="If true (checked), Map Maker tiles should be used instead of regular tiles. Disabled by default.")
			#parse("admin/noted.vm")	
		
	</fieldset>
	
	
	
	#if($options.TryGetValue("noClear",$value))#set($noClear=$!options.noClear)#end	
	<fieldset>
		<label for="noClear"><strong>Clear Map Divs:</strong></label>&nbsp;
			<select name="options.noClear" id="noClear">
				<option value="true" #if($!noClear=="true")selected="selected"#end >Yes</option>
				<option value="false" #if($!noClear=="false")selected="selected"#end >No</option>
			</select>
			#set($mess="If true (checked), do not clear the contents of the Map div. Disabled by default.")
			#parse("admin/noted.vm")	
	</fieldset>	
	
	#if($options.TryGetValue("mapTypeControl",$value))#set($mapTypeControl=$!options.mapTypeControl)#end			
	<fieldset>
		<label for="mapTypeControl"><strong>Map Type Control:</strong></label>&nbsp;
			<select name="options.mapTypeControl" id="mapTypeControl">
				<option value="true" #if($!mapTypeControl=="true")selected="selected"#end >Yes</option>
				<option value="false" #if($!mapTypeControl=="false")selected="selected"#end >No</option>
			</select>
			#set($mess="If false (un-checked), this will disabled the Map type control state. Enabled by default.")
			#parse("admin/noted.vm")	
		
	</fieldset>		
	
	#if($options.TryGetValue("mapTypeControlOptions",$value))#set($mapTypeControlOptions=$!options.mapTypeControlOptions)#end			
	<fieldset>
		<label for="mapTypeControlOptions"><strong>Map Type Control Options:</strong></label>&nbsp;
			<input type="text" name="options.mapTypeControlOptions" id="mapTypeControlOptions" value="$!mapTypeControlOptions" class="text ui-widget-content ui-corner-all" />
			#set($mess="The initial display options for the Map type control.")
			#parse("admin/noted.vm")
	</fieldset>
	
	
	
	#if($options.TryGetValue("overviewMapControl",$value))#set($overviewMapControl=$!options.overviewMapControl)#end	
	<fieldset>
		<label for="overviewMapControl"><strong>Overview Map Control:</strong></label>&nbsp;
			<select name="options.overviewMapControl" id="overviewMapControl">
				<option value="true" #if($!overviewMapControl=="true")selected="selected"#end >Yes</option>
				<option value="false" #if($!overviewMapControl=="false")selected="selected"#end >No</option>
			</select>
			#set($mess="If false (un-checked), this will disabled the Overview Map control state. Enabled by default.")
			#parse("admin/noted.vm")
		
	</fieldset>
	
	
	#if($options.TryGetValue("overviewMapControlOptions",$value))#set($overviewMapControlOptions=$!options.overviewMapControlOptions)#end	
	<fieldset>
		<label for="overviewMapControlOptions"><strong>Overview Map Control Options:</strong></label>&nbsp;
			<input type="text" name="options.overviewMapControlOptions" id="overviewMapControlOptions" value="$!overviewMapControlOptions" class="text ui-widget-content ui-corner-all" />
			#set($mess="The initial display options for the Overview Map control.")
			#parse("admin/noted.vm")
		 
	</fieldset>
	
	
	
	#if($options.TryGetValue("panControl",$value))#set($panControl=$!options.panControl)#end
	<fieldset>
		<label for="panControl"><strong>Pan Control:</strong></label>&nbsp;
			<select name="options.panControl" id="panControl">
				<option value="true" #if($!panControl=="true")selected="selected"#end >Yes</option>
				<option value="false" #if($!panControl=="false")selected="selected"#end >No</option>
			</select>
			#set($mess="If false (un-checked), this will disabled the Pan control state. Enabled by default.")
			#parse("admin/noted.vm")
		
	</fieldset>
	
	#if($options.TryGetValue("panControlOptions",$value))	#set($panControlOptions=$!options.panControlOptions)#end	
	<fieldset>
		<label for="panControlOptions"><strong>Pan Control Options:</strong></label>&nbsp;
			<input type="text" name="options.panControlOptions" id="panControlOptions" value="$!panControlOptions" class="text ui-widget-content ui-corner-all" />
			#set($mess="The initial display options for the Pan control.")
			#parse("admin/noted.vm")
		 
	</fieldset>
	
	#if($options.TryGetValue("rotateControl",$value))	#set($rotateControl=$!options.rotateControl)#end	
	<fieldset>
		<label for="rotateControl"><strong>Rotate Control:</strong></label>&nbsp;
			<select name="options.rotateControl" id="rotateControl">
				<option value="true" #if($!rotateControl=="true")selected="selected"#end >Yes</option>
				<option value="false" #if($!rotateControl=="false")selected="selected"#end >No</option>
			</select>
			#set($mess="If false (un-checked), this will disabled the Rotate control state. Enabled by default.")
			#parse("admin/noted.vm")
		
	</fieldset>
	
	#if($options.TryGetValue("rotateControlOptions",$value))#set($rotateControlOptions=$!options.rotateControlOptions)#end	
	<fieldset>
		<label for="rotateControlOptions"><strong>Rotate Control Options:</strong></label>&nbsp;
			<input type="text" name="options.rotateControlOptions" id="rotateControlOptions" value="$!rotateControlOptions" class="text ui-widget-content ui-corner-all" />
			#set($mess="The initial display options for the Rotate control.")
			#parse("admin/noted.vm")
		 
	</fieldset>
	
	#if($options.TryGetValue("scaleControl",$value))	#set($scaleControl=$!options.scaleControl)#end	
	<fieldset>
		<label for="scaleControl"><strong>Scale Control:</strong></label>&nbsp;
			<select name="options.scaleControl" id="scaleControl">
				<option value="true" #if($!scaleControl=="true")selected="selected"#end >Yes</option>
				<option value="false" #if($!scaleControl=="false")selected="selected"#end >No</option>
			</select>
			#set($mess="If false (un-checked), this will disabled the Scale control state. Enabled by default.")
			#parse("admin/noted.vm")
		
	</fieldset>
	
	#if($options.TryGetValue("scaleControlOptions",$value))	#set($scaleControlOptions=$!options.scaleControlOptions)#end	
	<fieldset>
		<label for="scaleControlOptions"><strong>Scale Control Options:</strong></label>&nbsp;
			<input type="text" name="options.scaleControlOptions" id="scaleControlOptions" value="$!scaleControlOptions" class="text ui-widget-content ui-corner-all" />
			#set($mess="The initial display options for the Scale control.")
			#parse("admin/noted.vm")
		 
	</fieldset>
	
	#if($options.TryGetValue("streetView",$value))	#set($streetView=$!options.streetView)#end
	<fieldset>
		<label for="streetView"><strong>Street Control:</strong></label>&nbsp;
			<input type="text" name="options.streetView" id="streetView" value="$!streetView" class="text ui-widget-content ui-corner-all" />
			#set($mess="If false (un-checked), this will disabled the Street control state. Enabled by default.")
			#parse("admin/noted.vm")
		
	</fieldset>
	
	#if($options.TryGetValue("streetViewControl",$value))	#set($streetViewControl=$!options.streetViewControl)#end
	<fieldset>
		<label for="streetViewControl"><strong>Street Control Options:</strong></label>&nbsp;
			<select name="options.streetViewControl" id="streetViewControl">
				<option value="true" #if($!streetViewControl=="true")selected="selected"#end >Yes</option>
				<option value="false" #if($!streetViewControl=="false")selected="selected"#end >No</option>
			</select>
			#set($mess="The initial display options for the Street control.")
			#parse("admin/noted.vm")
	</fieldset>
	
	#if($options.TryGetValue("zoomControl",$value))	#set($zoomControl=$!options.zoomControl)#end
	<fieldset>
		<label for="zoomControl"><strong>Zoom Control:</strong></label>&nbsp;
			<select name="options.zoomControl" id="zoomControl">
				<option value="true" #if($!zoomControl=="true")selected="selected"#end >Yes</option>
				<option value="false" #if($!zoomControl=="false")selected="selected"#end >No</option>
			</select>
			#set($mess="If false (un-checked), this will disabled the Zoom  control state. Enabled by default.")
			#parse("admin/noted.vm")
		
	</fieldset>
	
	#if($options.TryGetValue("zoomControlOptions",$value))	#set($zoomControlOptions=$!options.zoomControlOptions)#end
	<fieldset>
		<label for="zoomControlOptions"><strong>Zoom Control Options:</strong></label>&nbsp;
			<input type="text" name="options.zoomControlOptions" id="zoomControlOptions" value="$!zoomControlOptions" class="text ui-widget-content ui-corner-all" />
			#set($mess="The initial display options for the Zoom control.")
			#parse("admin/noted.vm")
		 
	</fieldset>
	
	#if($options.TryGetValue("scrollwheel",$value))	#set($scrollwheel=$!options.scrollwheel)#end
	<fieldset>
		<label for="scrollwheel"><strong>Scrollwheel Zoom Control:</strong></label>&nbsp;
			<select name="options.scrollwheel" id="scrollwheel">
				<option value="true" #if($!scrollwheel=="true")selected="selected"#end >Yes</option>
				<option value="false" #if($!scrollwheel=="false")selected="selected"#end >No</option>
			</select>
			#set($mess="If false (un-checked), this will disabled the Scrollwheel Zoom  control state. Enabled by default.")
			#parse("admin/noted.vm")
		
	</fieldset>
	
	#if($options.TryGetValue("tilt",$value))	#set($tilt=$!options.tilt)#end
	<fieldset>
		<label for="tilt"><strong>tilt Control:</strong></label>&nbsp;
			<input type="text" name="options.tilt" id="tilt" value="$!tilt" class="text ui-widget-content ui-corner-all" />
			#set($mess="The angle of incidence of the map as measured in degrees from the viewport plane to the map plane. The only currently supported values are 0, indicating no angle of incidence (no tilt), and 45, indicating a tilt of 45deg;. 45deg; imagery is only available for SATELLITE and HYBRID map types, within some locations, and at some zoom levels.")
			#parse("admin/noted.vm")
	</fieldset>
	
	#if($options.TryGetValue("styles",$value))	#set($styles=$!options.styles)#end
		<fieldset>
		<label for="styles"><strong>Map styles:</strong></label>&nbsp;
			<input type="text" name="options.styles" id="styles" value="$!styles" class="text ui-widget-content ui-corner-all" />
			#set($mess="The initial display styles options for the map.")
			#parse("admin/noted.vm")
	</fieldset>
</div>